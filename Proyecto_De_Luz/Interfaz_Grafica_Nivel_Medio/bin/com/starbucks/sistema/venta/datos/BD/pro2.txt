create database starbuck;
use starbuck;

-- Crear Tablas

	-- Tabla Inventario
	create table Inventario(
    
	Id_inventario char(9)  not null,
	Stock int not null,
	Stock_Min int  not null,
    primary key(Id_inventario)
    );
	-- Tabla Categoria

	create table Categoria(
	IdCat char(9) not null ,
	Nombre varchar (100) not null,
	Descripcion varchar (500) not null,
	Condicion int not null,
    primary key(IdCat ));
	

	-- Tabla Producto

	create table Producto(
	Id_Producto char(9) not null,
	Nombre varchar(100) not null ,
	Descripcion varchar(500) not null,
    IdCat char(9) not null,
	path_imagen varchar (100) not null,
	Precio_compra float not null,
	Precio_Venta float not null,
	Estado int check(Estado <=2 and Estado >-1),
    primary key (Id_Producto),
    constraint IdCat foreign key (idCat) references Categoria(IdCat));

	

	-- Tabla Movimiento
		create table Movimiento(
		Id_mov      char(9) not null ,
		Id_Producto char(9) not null,
		Tipo_Mov  varchar(50) not null,
		Cantidad  int not null,
		Id_inventario char(9)  not null,
        Primary key (Id_mov),
        constraint Id_Producto foreign key (Id_Producto) references Producto(Id_Producto),
        constraint Id_inventario foreign key (Id_inventario) references Inventario(Id_inventario));
	


-- Tabla Cliente

	create table Cliente(
	Id_Cliente char(9)  not null ,
	Nombre varchar(100) not null,
	Apellido varchar(100) not null,
	Nmr_Documento int not null,
	Tipo_Documento varchar(50) not null,
	Tipo_Cliente int check(Tipo_Cliente <=1 and Tipo_Cliente>-1),
	Nmr_Puntos int not null,
    primary key (Id_Cliente)
    );



	-- Tabla Categoria de Pago  

	create table cat_pago(
	Id_cat_pago char(9)  not null,
	Categoria int check(Categoria <=1 and Categoria>-1),
    primary key (Id_cat_pago));
	

	-- Tabla Documento de Venta


	create table Documento_Venta(
	Id_Venta char(9)not null ,
	Id_Cliente char(9)  not null,
	Id_cat_pago char(9) not null ,
	 Nmr_Boleta int not null,
	 Importe_Bruto float not null,
	 IGV float not null,
	 Importe_Neto float not null,
	 Estado int check(Estado <=2 and  Estado > -1),
     primary key (Id_Venta),
     constraint Id_Cliente foreign key (Id_Cliente) references Cliente(Id_Cliente),
     constraint Id_cat_pago foreign key (Id_cat_pago) references cat_pago (Id_cat_pago ));
	

	-- Tabla Detalle Documento de Venta

	create table Detalle_Doc_venta(
	Id_Detalle char(9)  not null ,
	Id_Producto char(9) not null,
	Id_Venta char(9) not null,
	Precio_compra float not null,
	Precio_Venta float not null,
	Fecha_Venta datetime not null,
	Cantidad int not null,
    primary key (Id_Detalle),
    constraint Id_Producto foreign key (Id_Producto) references Producto(Id_Producto),
    constraint Id_Venta foreign key (Id_Venta) references Documento_Venta(Id_Venta));
    


	-- Tabla Empleado 
	
	create table Empleado (
	id_Empleado char(9)  not null,
	Cargo varchar (50) not null,
    primary key (id_Empleado));
	


	-- Tabla Persona--observacion

	create table Persona(
	Id_Persona char(9) not null ,
	id_Empleado char(9) not null ,
	Id_Cliente char(9)  not null  ,
	Nombre varchar (100) not null,
	Apellidos varchar (100) not null,
	Tipo_Documento varchar(50) not null,
	Nmr_Documento int not null,
    primary key (Id_Persona),
    constraint id_Empleado foreign key (id_Empleado) references Empleado(id_Empleado),
    constraint Id_Cliente foreign key (Id_Cliente) references Cliente(Id_Cliente));

	
	-- Tabla rol

	create table Rol(
	Id_Rol char(9) not null ,
	Descripcion varchar(100) not null,
    primary key (Id_Rol));


	-- Tabla Usuario
	
	create table Usuario (
	Username varchar(100) not null unique,
	contraseña varchar (100) not null,
	Id_Usuario char(9) not null ,
	Id_rol char(9) not null,
    primary key (Id_Usuario),
    constraint Id_rol foreign key (Id_rol) references Rol (Id_Rol));


	-- Tabla Usuario,Empleado
	create table Usuario_Empleado(
	id_Empleado char(9) not null,
	Id_Usuario char(9) not null ,
	constraint id_Empleado foreign key (id_Empleado) references Empleado(id_Empleado),
	constraint Id_Usuario  foreign key (Id_Usuario ) references  Usuario (Id_Usuario));
